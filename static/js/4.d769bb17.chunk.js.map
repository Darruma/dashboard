{"version":3,"sources":["components/farmingTable/FarmingTable.jsx"],"names":["utils","harvest","TableContainer","ethers","styled","div","props","theme","style","mainBorder","panelBoxShadow","primaryFontColor","lightBackground","MainTableInner","scrollBarColor","MainTableRow","fonts","contentFont","MainTableHeader","headerFont","PanelTabContainerLeft","PanelTab","highlight","panelTabBoxShadow","buttonFontColor","panelTabLinkColor","columns","name","FarmingTable","useContext","HarvestContext","state","setState","setUnstakedFarm","useEffect","totalFarmEarned","summaries","length","map","prettyPosition","summary","index","unstakedBalance","toString","parseFloat","historicalRewards","darkTheme","lightTheme","display","NoAssetTable","className","col","i","key","address","String","isActive","onClick","reward","earnedRewards","console","log","minimumHarvestAmount","Math","floor","toFixed","stakedBalance","percentOfPool","usdValueOf"],"mappings":"u0JAQQA,EAAkBC,IAAlBD,MAEFE,GAFoBD,IAAXE,OAEQC,UAAOC,IAAV,KAMR,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,cACzB,SAACH,GAAD,OAAWA,EAAMC,MAAMC,MAAME,kBAClC,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,MAAMG,oBAClB,SAACL,GAAD,OAAWA,EAAMC,MAAMC,MAAMI,oBAO7CC,EAAiBT,UAAOC,IAAV,KAIC,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMM,kBAC5C,SAACR,GAAD,OAAWA,EAAMC,MAAMC,MAAMI,mBAUX,SAACN,GAAD,OAAWA,EAAMC,MAAMC,MAAMI,mBAGxC,SAACN,GAAD,OAAWA,EAAMC,MAAMC,MAAMG,oBAKlB,SAACL,GAAD,OAAWA,EAAMC,MAAMC,MAAMM,kBAG/CC,EAAeX,UAAOC,IAAV,IAIDW,IAAMC,aA4DjBC,EAAkBd,UAAOC,IAAV,IAKJW,IAAMG,YAmCjBC,EAAwBhB,UAAOC,IAAV,KAKrBgB,EAAWjB,UAAOC,IAAV,KAGE,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,cAC5B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,cAC5B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,cAEzB,SAACH,GAAD,OAAWA,EAAMC,MAAMC,MAAMc,aACnC,SAAChB,GAAD,OAAWA,EAAMC,MAAMC,MAAMe,qBAGlC,SAACjB,GAAD,OAAWA,EAAMC,MAAMC,MAAMgB,mBAG3B,SAAClB,GAAD,OAAWA,EAAMC,MAAMC,MAAMiB,oBAEvBT,IAAMC,aAiCnBS,EAAU,CACd,CACEC,KAAM,uBAER,CACEA,KAAM,SAER,CACEA,KAAM,aAER,CACEA,KAAM,UAER,CACEA,KAAM,aAER,CACEA,KAAM,YAER,CACEA,KAAM,UA6GKC,UAhGM,WAAO,IAAD,EACoBC,qBAAWC,KAAhDC,EADiB,EACjBA,MAAOC,EADU,EACVA,SAAUC,EADA,EACAA,gBA6BzB,OANAC,qBAAU,WACsB,IAA1BH,EAAMI,iBAhBqB,IAA3BJ,EAAMK,UAAUC,QAClBN,EAAMK,UAAUE,IAAItC,EAAMuC,gBAAgBD,KAAI,SAACE,EAASC,GACjC,wBAAjBD,EAAQb,MACVM,EAAgBO,EAAQE,gBAAgBC,YAE1CX,EAAS,eACJD,EADG,CAENI,gBAAkBJ,EAAMI,iBAAmBS,WACzCJ,EAAQK,2BAWf,CAACd,EAAMK,YAGR,kBAAC,gBAAD,CAAe7B,MAAuB,SAAhBwB,EAAMxB,MAAmBuC,IAAYC,KACxDhB,EAAMiB,QACL,kBAAC5B,EAAD,KACE,kBAACC,EAAD,KACE,mDAGF,KACHU,EAAMiB,QACL,kBAAC9C,EAAD,KAC8B,IAA3B6B,EAAMK,UAAUC,OACf,kBAACY,EAAD,KACE,yBAAKC,UAAU,UACb,wEAEF,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACZ,IACD,6DAAsC,OAK5C,kBAACrC,EAAD,KACE,kBAACK,EAAD,KACGQ,EAAQY,KAAI,SAACa,EAAKC,GACjB,OACE,uBAAGF,UAAWC,EAAIxB,KAAM0B,IAAKD,GAC1BD,EAAIxB,UAKZI,EAAMK,UACJE,IAAItC,EAAMuC,gBACVD,KAAI,SAACE,EAASC,GAAV,OACH,kBAAC1B,EAAD,CAAcsC,IAAKb,EAAQc,SACzB,yBAAKJ,UAAU,QAAQV,EAAQb,MAC/B,yBAAKuB,UAAU,UAAUK,OAAOf,EAAQgB,WACxC,yBACEN,UAAU,iBACVO,QAAS,kBAtENC,EAsE0BlB,EAAQmB,cArEvDC,QAAQC,IAAIH,QACZ1B,EAAS,eAAKD,EAAN,CAAa+B,qBAAsBJ,KAFvB,IAACA,KAwEDK,KAAKC,MAAwC,IAAlCpB,WAAWJ,EAAQmB,gBAAwB,KAASM,QAAQ,IAE3E,yBAAKf,UAAU,UACZN,WAAWJ,EAAQ0B,eAAeD,QAAQ,IAE7C,yBAAKf,UAAU,QAAQV,EAAQ2B,eAC/B,yBAAKjB,UAAU,YACZN,WAAWJ,EAAQE,iBAAiBuB,QAAQ,IAE/C,yBAAKf,UAAU,SAASV,EAAQ4B,kBAO5C,kBAAC,IAAD,CAAmBrC,MAAOA,MAQlC,IAAMkB,EAAe7C,UAAOC,IAAV,IAQCW,IAAMG,WAWNH,IAAMC","file":"static/js/4.d769bb17.chunk.js","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport HarvestContext from \"../../Context/HarvestContext\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport harvest from \"../../lib/index\";\nimport { darkTheme, lightTheme, fonts } from \"../../styles/appStyles\";\n\nimport FarmTableSkeleton from \"./FarmTableSkeleton\";\n\nconst { utils, ethers } = harvest;\n\nconst TableContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90%:\n  padding-bottom: 3rem;\n  border: ${(props) => props.theme.style.mainBorder};\n  box-shadow: ${(props) => props.theme.style.panelBoxShadow};\n  color: ${(props) => props.theme.style.primaryFontColor};\n  background-color: ${(props) => props.theme.style.lightBackground};\n  border-radius: .5rem;\n  border-top-left-radius: 0rem;\n  position: relative;\n  z-index: 50;\n`;\n\nconst MainTableInner = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  overflow-x: scroll;\n  scrollbar-color: ${(props) => props.theme.style.scrollBarColor}\n    ${(props) => props.theme.style.lightBackground};\n  scrollbar-width: thin;\n  ::-webkit-scrollbar {\n    width: 100%;\n    height: 0.8rem;\n    margin-top: -1.8rem;\n  }\n  ::-webkit-scrollbar-track:no-button {\n    width: 100%;\n    border-radius: 0.5rem;\n    background-color: ${(props) => props.theme.style.lightBackground};\n  }\n  ::-webkit-scrollbar-button {\n    color: ${(props) => props.theme.style.primaryFontColor};\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-color: black;\n    background-color: ${(props) => props.theme.style.scrollBarColor};\n  }\n`;\nconst MainTableRow = styled.div`\n  display: grid;\n  grid-template-columns: 0.75fr 0.5fr 0.75fr 0.75fr 0.75fr 0.75fr 0.5fr;\n  font-size: 1.7rem;\n  font-family: ${fonts.contentFont};\n  padding: 1.5rem 1rem;\n  width: 100%;\n  border-bottom: 1.2px solid rgba(53, 53, 53, 0.15);\n  @media (max-width: 1920px) {\n    width: 100%;\n  }\n  @media (max-width: 1280px) {\n    width: 110%;\n  }\n  // @media(max-width: 1100px) {\n  //   width: 160%;\n  // }\n  // @media(max-width: 800px) {\n  //   width: 175%;\n  // }\n  // @media(max-width: 710px) {\n  //   width: 250%;\n  // }\n  // @media(max-width:515px) {\n  //   width: 350%;\n  // }\n\n  div {\n    text-align: center;\n    width: 100%;\n  }\n  .name {\n  }\n  .active {\n  }\n  .earned-rewards {\n    cursor: pointer;\n    transition: scale 200ms ease;\n    border-radius: 0.5rem;\n    margin-right: 2rem;\n    &:hover {\n      width: 35%;\n      margin: 0 auto;\n      transform: scale(1.1);\n    }\n  }\n  .staked {\n  }\n  .pool {\n  }\n  .unstaked {\n    @media (max-width: 1280px) {\n      margin-left: 1.5rem;\n    }\n  }\n  .value {\n    margin-left: 1rem;\n    @media (max-width: 1280px) {\n      margin-left: 1.5rem;\n    }\n  }\n  .rewards-to-date {\n  }\n`;\nconst MainTableHeader = styled.div`\n  display: grid;\n  grid-template-columns: 0.75fr 0.5fr 0.75fr 0.75fr 0.75fr 0.75fr 0.5fr;\n  grid-gap: 20px;\n  font-size: 2rem;\n  font-family: ${fonts.headerFont};\n  padding: 1.5rem 1rem;\n  border-bottom: 2px black solid;\n  width: 100%;\n  @media (max-width: 1280px) {\n    width: 110%;\n  }\n  // @media(max-width: 1920px) {\n  //   width: 100%;\n  // }\n  // @media(max-width: 1800px) {\n  //   width: 120%;\n  // }\n  // @media(max-width: 1100px) {\n  //   width: 160%;\n  // }\n  // @media(max-width: 800px) {\n  //   width: 175%;\n  // }\n  // @media(max-width: 710px) {\n  //   width: 250%;\n  // }\n  // @media(max-width:515px) {\n  //   width: 350%;\n  // }\n\n  p {\n    text-align: center;\n    width: 100%;\n\n    &:nth-child(8) {\n    }\n  }\n`;\n\nconst PanelTabContainerLeft = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst PanelTab = styled.div`\n  margin-right: 0.75rem;\n  border-radius: 1.2rem;\n  border-top: ${(props) => props.theme.style.mainBorder};\n  border-left: ${(props) => props.theme.style.mainBorder};\n  border-right: ${(props) => props.theme.style.mainBorder};\n  padding: 0.75rem 2rem 2rem 2rem;\n  background-color: ${(props) => props.theme.style.highlight};\n  box-shadow: ${(props) => props.theme.style.panelTabBoxShadow};\n  position: relative;\n  top: 1.2rem;\n  color: ${(props) => props.theme.style.buttonFontColor};\n\n  p {\n    color: ${(props) => props.theme.style.panelTabLinkColor};\n    text-decoration: none;\n    font-family: ${fonts.contentFont};\n    font-size: 2rem;\n    position: relative;\n    top: 0.1rem;\n    @media (max-width: 500px) {\n      font-size: 1.5rem;\n      top: 0.3rem;\n    }\n  }\n  @media (max-width: 605px) {\n    font-size: 1.9rem;\n    padding: 0.75rem 1rem 2.2rem 1rem;\n    position: relative;\n    top: 0.1rem;\n  }\n  @media (max-width: 550px) {\n    margin-right: 0.5rem;\n  }\n  @media (max-width: 380px) {\n    font-size: 1.5rem;\n    padding: 0.75rem 0.75rem 2rem 0.75rem;\n    position: relative;\n    margin-right: 0.5rem;\n    top: 0.5rem;\n    p {\n      top: 0.4rem;\n    }\n  }\n  @media (max-width: 333px) {\n    margin-right: 0.3rem;\n  }\n`;\n\nconst columns = [\n  {\n    name: \"Profit Sharing Pool\",\n  },\n  {\n    name: \"Earns\",\n  },\n  {\n    name: \"Claimable\",\n  },\n  {\n    name: \"Staked\",\n  },\n  {\n    name: \"% of Pool\",\n  },\n  {\n    name: \"Unstaked\",\n  },\n  {\n    name: \"Value\",\n  },\n];\n\nconst noAssetColumns = [\n  {\n    name: \"You currently are not staking any assets\",\n  },\n  {\n    asset: \"Stake assets to get started\",\n  },\n];\n\nconst FarmingTable = () => {\n  const { state, setState, setUnstakedFarm } = useContext(HarvestContext);\n  const getThisReward = (reward) => {\n    console.log(reward);\n    setState({ ...state, minimumHarvestAmount: reward });\n  };\n\n  const getTotalFarmEarned = () => {\n    let total = 0;\n    if (state.summaries.length !== 0) {\n      state.summaries.map(utils.prettyPosition).map((summary, index) => {\n        if (summary.name === \"FARM Profit Sharing\") {\n          setUnstakedFarm(summary.unstakedBalance.toString());\n        }\n        setState({\n          ...state,\n          totalFarmEarned: (state.totalFarmEarned += parseFloat(\n            summary.historicalRewards,\n          )),\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (state.totalFarmEarned === 0) {\n      getTotalFarmEarned();\n    }\n  }, [state.summaries]);\n\n  return (\n    <ThemeProvider theme={state.theme === \"dark\" ? darkTheme : lightTheme}>\n      {state.display ? (\n        <PanelTabContainerLeft>\n          <PanelTab>\n            <p>your staked assets</p>\n          </PanelTab>\n        </PanelTabContainerLeft>\n      ) : null}\n      {state.display ? (\n        <TableContainer>\n          {state.summaries.length === 0 ? (\n            <NoAssetTable>\n              <div className=\"header\">\n                <p>You currently are not staking any assets</p>\n              </div>\n              <div className=\"content\">\n                <div className=\"name\">\n                  {\" \"}\n                  <p>Stake assets to start earning!</p>{\" \"}\n                </div>\n              </div>\n            </NoAssetTable>\n          ) : (\n            <MainTableInner>\n              <MainTableHeader>\n                {columns.map((col, i) => {\n                  return (\n                    <p className={col.name} key={i}>\n                      {col.name}\n                    </p>\n                  );\n                })}\n              </MainTableHeader>\n              {state.summaries\n                .map(utils.prettyPosition)\n                .map((summary, index) => (\n                  <MainTableRow key={summary.address}>\n                    <div className=\"name\">{summary.name}</div>\n                    <div className=\"active\">{String(summary.isActive)}</div>\n                    <div\n                      className=\"earned-rewards\"\n                      onClick={() => getThisReward(summary.earnedRewards)}\n                    >\n                      {(Math.floor(parseFloat(summary.earnedRewards)*1000000)/1000000).toFixed(6)}\n                    </div>\n                    <div className=\"staked\">\n                      {parseFloat(summary.stakedBalance).toFixed(6)}\n                    </div>\n                    <div className=\"pool\">{summary.percentOfPool}</div>\n                    <div className=\"unstaked\">\n                      {parseFloat(summary.unstakedBalance).toFixed(6)}\n                    </div>\n                    <div className=\"value\">{summary.usdValueOf}</div>\n                  </MainTableRow>\n                ))}\n            </MainTableInner>\n          )}\n        </TableContainer>\n      ) : (\n        <FarmTableSkeleton state={state} />\n      )}\n    </ThemeProvider>\n  );\n};\n\nexport default FarmingTable;\n\nconst NoAssetTable = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .header {\n    font-size: 2rem;\n    font-family: ${fonts.headerFont};\n    padding: 1.5rem 1rem;\n    border-bottom: 2px black solid;\n    width: 100%;\n    p {\n      text-align: center;\n    }\n  }\n  .content {\n    width: 100%;\n    font-size: 1.7rem;\n    font-family: ${fonts.contentFont};\n    padding: 1.5rem 1rem;\n    width: 100%;\n    border-bottom: 1.2px solid rgba(53, 53, 53, 0.15);\n    p {\n      text-align: center;\n    }\n  }\n`;\n"],"sourceRoot":""}